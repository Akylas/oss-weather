
android { 
  compileSdkVersion 31
  defaultConfig {  
    minSdkVersion 19
    targetSdkVersion 31
    versionCode 43
    versionName "1.2.1"
    ndk {
      abiFilters.clear()
    }
  }
  lintOptions {
      checkReleaseBuilds false
      // Or, if you prefer, you can continue to check for errors in release builds,
      // but continue the build even when errors are found:
      abortOnError false
  }
  // splits {
  //     abi {
  //         enable gradle.startParameter.taskNames.contains("assembleRelease")
  //         reset()
  //         include  'x86_64', 'arm64-v8a', 'armeabi-v7a'
  //         universalApk false
  //     }
  // }
  aaptOptions {
    additionalParameters "--no-version-vectors"  
  }  
  buildTypes { // THIS CAUSES RELEASE MODE ERROR ON APP LAUNCH
    release {
      multiDexEnabled false
      // Enables code shrinking, obfuscation, and optimization for only
      // your project's release build type.
      minifyEnabled true

      // Enables resource shrinking, which is performed by the
      // Android Gradle plugin.
      shrinkResources true

      // resConfigs "en", "fr", "es"

      // Includes the default ProGuard rules files that are packaged with
      // the Android Gradle plugin. To learn more, go to the section about
      // R8 configuration files.
      def absolutePathToAppResources = getAppResourcesPath()
      proguardFiles getDefaultProguardFile(
        'proguard-android-optimize.txt'),
        "$absolutePathToAppResources/Android/proguard-rules.pro"

      debuggable false
      jniDebuggable false
      renderscriptDebuggable false
    }
    debug {
      multiDexEnabled true
    }
  }
}

task createProguard {
    dependsOn 'buildMetadata'
    doLast {
        exec {
            workingDir "$USER_PROJECT_ROOT"
            commandLine 'node', 'createProguard.js'
        }
    }
}